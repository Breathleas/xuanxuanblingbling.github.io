[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 5.4.75 (aodzip@ThinkPad-X1) (gcc version 8.4.0 (Buildroot -g99ab117-dirty)) #1 Fri Nov 13 16:47:42 CST 2020
[    0.000000] CPU: ARM926EJ-S [41069265] revision 5 (ARMv5TEJ), cr=0005317f
[    0.000000] CPU: VIVT data cache, VIVT instruction cache
[    0.000000] OF: fdt: Machine model: HatLab BADGE200
[    0.000000] Memory policy: Data cache writeback
[    0.000000] cma: Reserved 16 MiB at 0x83000000
[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 16256
[    0.000000] Kernel command line: console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2 root=/dev/mtdblock3 overlayfsdev=/dev/mtdblock5
[    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes, linear)
[    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes, linear)
[    0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.000000] Memory: 37700K/65536K available (7168K kernel code, 260K rwdata, 1744K rodata, 1024K init, 226K bss, 11452K reserved, 16384K cma-reserved)
[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16
[    0.000000] random: get_random_bytes called from start_kernel+0x254/0x444 with crng_init=0
[    0.000050] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000143] clocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000931] Console: colour dummy device 80x30
[    0.001035] Calibrating delay loop... 203.16 BogoMIPS (lpj=1015808)
[    0.070266] pid_max: default: 32768 minimum: 301
[    0.070808] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.070857] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.072792] CPU: Testing write buffer coherency: ok
[    0.074947] Setting up static identity map for 0x80100000 - 0x80100058
[    0.076143] devtmpfs: initialized
[    0.088031] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.088100] futex hash table entries: 256 (order: -1, 3072 bytes, linear)
[    0.092425] pinctrl core: initialized pinctrl subsystem
[    0.094996] NET: Registered protocol family 16
[    0.098876] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.101378] cpuidle: using governor menu
[    0.148599] SCSI subsystem initialized
[    0.149024] usbcore: registered new interface driver usbfs
[    0.149194] usbcore: registered new interface driver hub
[    0.149377] usbcore: registered new device driver usb
[    0.149849] mc: Linux media interface: v0.10
[    0.149950] videodev: Linux video capture interface: v2.00
[    0.150049] pps_core: LinuxPPS API ver. 1 registered
[    0.150067] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.150148] PTP clock support registered
[    0.151329] ion_parse_dt_heap_common: id 4 type 4 name cma align 1000
[    0.152582] Advanced Linux Sound Architecture Driver Initialized.
[    0.153938] Bluetooth: Core ver 2.22
[    0.154155] NET: Registered protocol family 31
[    0.154182] Bluetooth: HCI device and connection manager initialized
[    0.154227] Bluetooth: HCI socket layer initialized
[    0.154255] Bluetooth: L2CAP socket layer initialized
[    0.154321] Bluetooth: SCO socket layer initialized
[    0.155633] clocksource: Switched to clocksource timer
[    0.187226] thermal_sys: Registered thermal governor 'step_wise'
[    0.187980] NET: Registered protocol family 2
[    0.189534] tcp_listen_portaddr_hash hash table entries: 512 (order: 0, 4096 bytes, linear)
[    0.189615] TCP established hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.189678] TCP bind hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.189730] TCP: Hash tables configured (established 1024 bind 1024)
[    0.190067] UDP hash table entries: 256 (order: 0, 4096 bytes, linear)
[    0.190140] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes, linear)
[    0.190699] NET: Registered protocol family 1
[    0.193560] NetWinder Floating Point Emulator V0.97 (double precision)
[    0.195439] Initialise system trusted keyrings
[    0.196159] workingset: timestamp_bits=30 max_order=14 bucket_order=0
[    0.217959] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.218590] jffs2: version 2.2. (NAND) (SUMMARY)  Â© 2001-2006 Red Hat, Inc.
[    0.332140] Key type asymmetric registered
[    0.332180] Asymmetric key parser 'x509' registered
[    0.332359] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 247)
[    0.332383] io scheduler mq-deadline registered
[    0.332399] io scheduler kyber registered
[    0.335106] sun4i-usb-phy 1c13400.phy: Couldn't request ID GPIO
[    0.347081] suniv-f1c100s-pinctrl 1c20800.pinctrl: initialized sunXi PIO driver
[    0.372047] Serial: 8250/16550 driver, 8 ports, IRQ sharing disabled
[    0.381310] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pe not found, using dummy regulator
[    0.382748] printk: console [ttyS0] disabled
[    0.403079] 1c25000.serial: ttyS0 at MMIO 0x1c25000 (irq = 27, base_baud = 6250000) is a 16550A
[    0.873007] printk: console [ttyS0] enabled
[    0.878941] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pa not found, using dummy regulator
[    0.910906] 1c25400.serial: ttyS1 at MMIO 0x1c25400 (irq = 28, base_baud = 6250000) is a 16550A
[    0.920279] serial serial0: tty port ttyS1 registered
[    0.930492] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pd not found, using dummy regulator
[    0.952208] panel-simple panel: panel supply power not found, using dummy regulator
[    0.961860] SCSI Media Changer driver v0.25 
[    0.967814] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pc not found, using dummy regulator
[    0.980693] spi-nand spi0.0: GigaDevice SPI NAND was found.
[    0.986403] spi-nand spi0.0: 128 MiB, block size: 128 KiB, page size: 2048, OOB size: 64
[    0.996054] 6 fixed-partitions partitions found on MTD device spi0.0
[    1.002413] Creating 6 MTD partitions on "spi0.0":
[    1.007338] 0x000000000000-0x000000080000 : "u-boot"
[    1.017793] 0x000000080000-0x0000000a0000 : "dtb"
[    1.026942] 0x000000100000-0x000000800000 : "kernel"
[    1.034331] random: fast init done
[    1.065112] 0x000000800000-0x000004800000 : "rom"
[    1.306959] 0x000004800000-0x000005800000 : "extra"
[    1.374161] 0x000005800000-0x000007800000 : "overlay"
[    1.500397] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.507047] ehci-platform: EHCI generic platform driver
[    1.512709] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.519019] ohci-platform: OHCI generic platform driver
[    1.524755] usbcore: registered new interface driver usb-storage
[    1.532786] i2c /dev entries driver
[    1.537070] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pd not found, using dummy regulator
[    1.556955] aw9523b_gpio 0-005b: with id 0x23 registered.
[    1.563259] axp20x-i2c 0-0034: AXP20x variant AXP199 found
[    1.586720] input: axp20x-pek as /devices/platform/soc/1c27000.i2c/i2c-0/0-0034/axp199-pek/input/input0
[    1.600776] axp20x-i2c 0-0034: AXP20X driver loaded
[    1.607584] suniv-f1c100s-pinctrl 1c20800.pinctrl: pin PE0 already requested by 1c25000.serial; cannot claim for 1cb0000.csi
[    1.618913] suniv-f1c100s-pinctrl 1c20800.pinctrl: pin-128 (1cb0000.csi) status -22
[    1.626625] suniv-f1c100s-pinctrl 1c20800.pinctrl: could not request pin 128 (PE0) from group PE0  on device 1c20800.pinctrl
[    1.637856] sun4i-csi 1cb0000.csi: Error applying setting, reverse things back
[    1.645113] sun4i-csi: probe of 1cb0000.csi failed with error -22
[    1.651887] axp20x-usb-power-supply axp20x-usb-power-supply: DMA mask not set
[    1.660700] axp20x-battery-power-supply axp20x-battery-power-supply: DMA mask not set
[    1.669256] axp20x-ac-power-supply axp20x-ac-power-supply: DMA mask not set
[    1.677814] sunxi-wdt 1c20ca0.watchdog: Watchdog enabled (timeout=16 sec, nowayout=0)
[    1.687973] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pf not found, using dummy regulator
[    1.725965] sunxi-mmc 1c0f000.mmc: initialized, max. request size: 16384 KB
[    1.735455] usbcore: registered new interface driver usbhid
[    1.741160] usbhid: USB HID core driver
[    1.745345] sunxi-cedar 1c0e000.video-codec: sunxi cedar version 0.01alpha
[    1.752652] sunxi-cedar 1c0e000.video-codec: cedar-ve the get irq is 20
[    1.761492] axp20x-adc axp20x-adc: DMA mask not set
[    1.773868] debugfs: Directory '1c23c00.codec' with parent 'F1C100s Audio Codec' already present!
[    1.787865] sun4i-codec 1c23c00.codec: Codec <-> 1c23c00.codec mapping ok
[    1.803817] NET: Registered protocol family 17
[    1.808838] Bluetooth: RFCOMM TTY layer initialized
[    1.813799] Bluetooth: RFCOMM socket layer initialized
[    1.819084] Bluetooth: RFCOMM ver 1.11
[    1.822892] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[    1.828275] Bluetooth: BNEP filters: protocol multicast
[    1.833518] Bluetooth: BNEP socket layer initialized
[    1.838536] Bluetooth: HIDP (Human Interface Emulation) ver 1.2
[    1.844462] Bluetooth: HIDP socket layer initialized
[    1.849542] Key type dns_resolver registered
[    1.855236] Loading compiled-in X.509 certificates
[    1.880975] sun4i-drm soc:display-engine: bound 1e00000.display-frontend (ops 0xc0839e98)
[    1.890030] sun4i-drm soc:display-engine: bound 1e60000.display-backend (ops 0xc08396dc)
[    1.899628] sun4i-drm soc:display-engine: bound 1c0c000.lcd-controller (ops 0xc083827c)
[    1.908218] sun4i-drm soc:display-engine: bound 1c0a000.tv-encoder (ops 0xc0838f9c)
[    1.915996] [drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
[    1.922598] [drm] No driver support for vblank timestamp query.
[    1.930208] [drm] Initialized sun4i-drm 1.0.0 20150629 for soc:display-engine on minor 0
[    1.939291] [drm] kms: can't enable cloning when we probably wanted to.
[    2.010658] Console: switching to colour frame buffer device 100x30
[    2.049521] sun4i-drm soc:display-engine: fb0: sun4i-drmdrmfb frame buffer device
[    2.058783] usb_phy_generic usb_phy_generic.0.auto: usb_phy_generic.0.auto supply vcc not found, using dummy regulator
[    2.070885] musb-hdrc musb-hdrc.1.auto: MUSB HDRC host driver
[    2.076933] musb-hdrc musb-hdrc.1.auto: new USB bus registered, assigned bus number 1
[    2.087515] hub 1-0:1.0: USB hub found
[    2.091447] hub 1-0:1.0: 1 port detected
[    2.131107] hctosys: unable to open rtc device (rtc0)
[    2.136903] cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.156998] cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.163801] ALSA device list:
[    2.166915]   #0: F1C100s Audio Codec
[    2.171217] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.179947] cfg80211: failed to load regulatory.db
[    2.187954] random: crng init done
[    2.191827] power_supply axp20x-battery: driver failed to report `status' property: -5
[   23.167188] jffs2: notice: (1) jffs2_build_xattr_subsystem: complete building xattr subsystem, 0 of xdatum (0 unchecked, 0 orphan) and 0 of xref (0 dead, 0 orphan) found.
[   23.200064] VFS: Mounted root (jffs2 filesystem) readonly on device 31:3.
[   23.215126] devtmpfs: mounted
[   23.224663] Freeing unused kernel memory: 1024K
[   23.229402] Run /preinit as init process
Unlocking /dev/mtd5 ...
Erasing /dev/mtd5 ...

Skipping bad block at 0x800000   [   26.968146] jffs2: notice: (60) jffs2_build_xattr_subsystem: complete building xattr subsystem, 0 of xdatum (0 unchecked, 0 orphan) and 0 of xref (0 dead, 0 orphan) found.
[   27.088782] overlayfs: upper fs does not support tmpfile.
Starting syslogd: OK
Starting klogd: OK
Running sysctl: OK
Saving random seed: OK
Starting system message bus: done
Starting RNDIS: [   30.522812] using random self ethernet address
[   30.527438] using random host ethernet address
[   30.676198] usb0: HOST MAC ea:54:4c:22:36:e6
[   30.680627] usb0: MAC 26:fc:cf:35:d5:82
OK
Starting network: [   31.046827] configfs-gadget gadget: high-speed config #1: c
OK
Starting dropbear sshd: OK
Starting dnsmasq: OK
Starting RNDIS fallback: [   32.488964] vcc3v0: disabling
[   32.491970] vcc3v3: disabling
[   32.494937] vcc5v0: disabling
[   32.498047] usb0_vbus: disabling



Stopping RNDIS: OK

[   49.585067] using random self ethernet address
[   49.589668] using random host ethernet address
[   49.595503] usb0: HOST MAC fe:68:6c:95:4f:c6
[   49.600085] usb0: MAC 0a:16:ba:94:c3:a5
[   49.604034] using random self ethernet address
[   49.608592] using random host ethernet address
[   49.613221] g_ether gadget: Ethernet Gadget, version: Memorial Day 2008
[   49.619951] g_ether gadget: g_ether ready
OK
Starting Bluetooth Driver: [   49.993010] g_ether gadget: high-speed config #1: CDC Ethernet (ECM)
[   51.007443] Bluetooth: HCI UART driver ver 2.3
[   51.011921] Bluetooth: HCI UART protocol H4 registered
[   51.017759] Bluetooth: HCI UART protocol Broadcom registered
[   51.028899] hci_uart_bcm serial0-0: serial0-0 supply vbat not found, using dummy regulator
[   51.037519] hci_uart_bcm serial0-0: serial0-0 supply vddio not found, using dummy regulator
OK
Starting Application: [   51.390347] overlayfs: upper fs does not support tmpfile.
[   51.451420] Bluetooth: hci0: BCM: chip id 63
[   51.458879] Bluetooth: hci0: BCM: features 0x07
[   51.487111] Bluetooth: hci0: BCM20702A
[   51.490920] Bluetooth: hci0: BCM20702A1 (001.002.014) build 0000
[   51.497312] bluetooth hci0: Direct firmware load for brcm/BCM20702A1.hcd failed with error -2
[   51.505959] Bluetooth: hci0: BCM: Patch brcm/BCM20702A1.hcd not found
OK

Welcome to Hatlab BADGE200
badge200 login: root
# uan[J[Jname
Linux
# # uname[J -a
Linux badge200 5.4.75 #1 Fri Nov 13 16:47:42 CST 2020 armv5tejl GNU/Linux
# ls
# exit[J[J[J[J
U-Boot SPL 2020.07 (Nov 13 2020 - 15:01:11 +0800)
DRAM: 64 MiB
Trying to boot from MMC1
Card did not respond to voltage select!
spl: mmc init failed with error: -95
Trying to boot from MMC2
Card did not respond to voltage select!
spl: mmc init failed with error: -95
Trying to boot from sunxi SPI
SPI-NAND: GigaDevice GD5F1GQ4UAxxG
SPI-NAND: U-Boot address: 53248


U-Boot 2020.07 (Nov 13 2020 - 15:01:11 +0800) Allwinner Technology

CPU:   Allwinner F Series (SUNIV)
Model: Allwinner F1C100s Generic Device
DRAM:  64 MiB
MMC:   mmc@1c0f000: 0, mmc@1c10000: 1
Setting up a 800x480 lcd console (overscan 0x0)
In:    serial
Out:   vga
Err:   vga
Allwinner mUSB OTG (Peripheral)
Hit any key to stop autoboot:  0  0
=> 
=> 
=> PRIO    boot    printev nv
boot_device=spi
boot_slot_0=empty
boot_slot_1=empty
boot_targets=fel dfu flasher mmc0 mmc1 spi ums
bootargs_common=console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2
bootcmd=run scan_boot_slot; for target in ${boot_targets}; do run bootcmd_${target}; done
bootcmd_dfu=if test "${boot_device}" != "mmc0" || test "${boot_slot_1}" = "empty"; then run dfu_boot; fi;
bootcmd_fel=if test "${boot_device}" = "fel"; then run fel_boot; fi;
bootcmd_flasher=if test "${boot_device}" = "mmc0"; then run flasher_boot; fi;
bootcmd_mmc0=if test "${boot_device}" = "mmc0"; then devnum=0; run mmc_boot; fi;
bootcmd_mmc1=if test "${boot_device}" = "mmc1"; then devnum=1; run mmc_boot; fi;
bootcmd_spi=if test "${boot_device}" = "spi"; then run nor_nand_boot; fi;
bootcmd_ums=if test "${boot_slot_0}" = "mmc0"; then echo "Emulating SD Reader on MMC0..."; ums 0 mmc 0:0; fi;
bootm_size=0x1700000
dfu_boot=if test "${boot_slot_1}" = "spi-nand"; then echo "DFU waiting on SPI-NAND..."; run dfu_nand; fi; if test "${boot_slot_1}" = "spi-nor"; then echo "DFU waiting on SPI-NOR..."; run dfu_nor; fi; if test "${boot_slot_1}" = "mmc1"; then echo "DFU waiting on MMC1..."; setenv dfu_mmc_dev 1; run dfu_mmc; fi; if test "${boot_slot_1}" = "empty" && test "${boot_slot_0}" = "mmc0"; then echo "DFU waiting on MMC0..."; setenv dfu_mmc_dev 0; run dfu_mmc; fi;
dfu_mmc=mmc dev ${dfu_mmc_dev}; run mmc_dfu_info; dfu 0 mmc ${dfu_mmc_dev} ${dfu_wait_timeout};
dfu_nand=setenv dfu_alt_info "${nand_dfu_info}"; dfu 0 mtd spi-nand0 ${dfu_wait_timeout};
dfu_nor=setenv dfu_alt_info "${nor_dfu_info}"; dfu 0 sf 0:0 ${dfu_wait_timeout};
dfu_wait_timeout=3
fdt_addr_r=0x80700000
fdtcontroladdr=82e5cad0
fel_boot=echo "Booting from FEL..."; rootdev=/dev/ram0; run genbootargs; bootz ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r};
flash_nand=size mmc 0:${mmc_bootpart} ${flasher_nandimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; mtd erase spi-nand0; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_nandimage} ${flasher_size_buffer} ${flasher_offset}; mtd write spi-nand0 ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flash_nor=size mmc 0:${mmc_bootpart} ${flasher_norimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_norimage} ${flasher_size_buffer} ${flasher_offset}; sf update ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flasher_boot=if test -e mmc 0:${mmc_bootpart} ${flasher_norimage}; then if test "${boot_slot_1}" = "spi-nor"; then echo "Flashing SPI-NOR from MMC0..."; run flash_nor; run nor_boot; fi; fi; if test -e mmc 0:${mmc_bootpart} ${flasher_nandimage}; then if test "${boot_slot_1}" = "spi-nand"; then echo "Flashing SPI-NAND from MMC0..."; run flash_nand; run nand_boot; fi; fi;
flasher_nandimage=sysimage-nand.img
flasher_norimage=sysimage-nor.img
flasher_ptr_buffer=0x80000004
flasher_ptr_counter=0x80000000
flasher_size_buffer=0x800000
genbootargs=setenv bootargs ${bootargs_common} root=${rootdev} ${overlayfs_config}
kernel_addr_r=0x80000000
mmc_boot=mmc dev ${devnum}; echo "Booting from MMC${devnum}..."; rootdev=/dev/mmcblk${devnum}p${mmc_rootpart}; run genbootargs; load mmc ${devnum}:${mmc_bootpart} $kernel_addr_r ${mmc_kernel}; load mmc ${devnum}:${mmc_bootpart} ${fdt_addr_r} ${mmc_fdt}; bootz ${kernel_addr_r} - ${fdt_addr_r};
mmc_bootpart=2
mmc_dfu_info=setenv dfu_alt_info "all raw 0x0 0x37000;u-boot raw 0x10 0x7f0;boot part ${dfu_mmc_dev} ${mmc_bootpart};rom part ${dfu_mmc_dev} ${mmc_rootpart};devicetree.dtb fat ${dfu_mmc_dev} ${mmc_bootpart};zImage fat ${dfu_mmc_dev} ${mmc_bootpart}"
mmc_fdt=devicetree.dtb
mmc_kernel=zImage
mmc_rootpart=3
mmc_ubootpart=1
nand_boot=echo "Booting from SPI-NAND..."; mtd read spi-nand0 ${fdt_addr_r} ${nand_fdt_offset} ${nand_fdt_length}; mtd read spi-nand0 ${kernel_addr_r} ${nand_kernel_offset} ${nand_kernel_length}; rootdev=/dev/mtdblock${nand_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${nand_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nand_dfu_info=all raw 0x0 0x8000000;u-boot raw 0x0 0x80000;dtb raw 0x80000 0x20000;kernel raw 0x100000 0x700000;rom raw 0x800000 0x4000000;extra raw 0x4800000 0x1000000
nand_fdt_length=0x4000
nand_fdt_offset=0x80000
nand_kernel_length=0x700000
nand_kernel_offset=0x100000
nand_overlaypart=5
nand_rootpart=3
nor_boot=echo "Booting from SPI-NOR..."; sf probe; sf read ${fdt_addr_r} ${sf_fdt_offset} ${sf_fdt_length}; sf read ${kernel_addr_r} ${sf_kernel_offset} ${sf_kernel_length}; rootdev=/dev/mtdblock${sf_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${sf_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nor_dfu_info=all raw 0x0 0x1000000;u-boot raw 0x0 0x70000;dtb raw 0x70000 0x10000;kernel raw 0x80000 0x580000;rom raw 0x600000 0x700000
nor_nand_boot=if test "${boot_slot_1}" = "spi-nor"; then run nor_boot; fi; if test "${boot_slot_1}" = "spi-nand"; then run nand_boot; fi;
ramdisk_addr_r=0x80708000
scan_boot_slot=run scan_boot_slot_0; run scan_boot_slot_1; echo "========================="; echo "Boot Device: ${boot_device}"; echo "Boot Slot 0: ${boot_slot_0}"; echo "Boot Slot 1: ${boot_slot_1}"; echo "========================="; 
scan_boot_slot_0=if mmc dev 0; then setenv boot_slot_0 mmc0; fi;
scan_boot_slot_1=if mmc dev 1; then setenv boot_slot_1 mmc1; else if sf probe; then setenv boot_slot_1 spi-nor; else if mtd list; then setenv boot_slot_1 spi-nand; fi; fi; fi;
sf_fdt_length=0x10000
sf_fdt_offset=0x70000
sf_kernel_length=0x580000
sf_kernel_offset=0x80000
sf_overlaypart=4
sf_rootpart=3
stderr=serial,vga
stdin=serial
stdout=serial,vga

Environment size: 6422/131068 bytes
=> 
boot_device=spi
boot_slot_0=empty
boot_slot_1=empty
boot_targets=fel dfu flasher mmc0 mmc1 spi ums
bootargs_common=console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2
bootcmd=run scan_boot_slot; for target in ${boot_targets}; do run bootcmd_${target}; done
bootcmd_dfu=if test "${boot_device}" != "mmc0" || test "${boot_slot_1}" = "empty"; then run dfu_boot; fi;
bootcmd_fel=if test "${boot_device}" = "fel"; then run fel_boot; fi;
bootcmd_flasher=if test "${boot_device}" = "mmc0"; then run flasher_boot; fi;
bootcmd_mmc0=if test "${boot_device}" = "mmc0"; then devnum=0; run mmc_boot; fi;
bootcmd_mmc1=if test "${boot_device}" = "mmc1"; then devnum=1; run mmc_boot; fi;
bootcmd_spi=if test "${boot_device}" = "spi"; then run nor_nand_boot; fi;
bootcmd_ums=if test "${boot_slot_0}" = "mmc0"; then echo "Emulating SD Reader on MMC0..."; ums 0 mmc 0:0; fi;
bootm_size=0x1700000
dfu_boot=if test "${boot_slot_1}" = "spi-nand"; then echo "DFU waiting on SPI-NAND..."; run dfu_nand; fi; if test "${boot_slot_1}" = "spi-nor"; then echo "DFU waiting on SPI-NOR..."; run dfu_nor; fi; if test "${boot_slot_1}" = "mmc1"; then echo "DFU waiting on MMC1..."; setenv dfu_mmc_dev 1; run dfu_mmc; fi; if test "${boot_slot_1}" = "empty" && test "${boot_slot_0}" = "mmc0"; then echo "DFU waiting on MMC0..."; setenv dfu_mmc_dev 0; run dfu_mmc; fi;
dfu_mmc=mmc dev ${dfu_mmc_dev}; run mmc_dfu_info; dfu 0 mmc ${dfu_mmc_dev} ${dfu_wait_timeout};
dfu_nand=setenv dfu_alt_info "${nand_dfu_info}"; dfu 0 mtd spi-nand0 ${dfu_wait_timeout};
dfu_nor=setenv dfu_alt_info "${nor_dfu_info}"; dfu 0 sf 0:0 ${dfu_wait_timeout};
dfu_wait_timeout=3
fdt_addr_r=0x80700000
fdtcontroladdr=82e5cad0
fel_boot=echo "Booting from FEL..."; rootdev=/dev/ram0; run genbootargs; bootz ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r};
flash_nand=size mmc 0:${mmc_bootpart} ${flasher_nandimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; mtd erase spi-nand0; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_nandimage} ${flasher_size_buffer} ${flasher_offset}; mtd write spi-nand0 ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flash_nor=size mmc 0:${mmc_bootpart} ${flasher_norimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_norimage} ${flasher_size_buffer} ${flasher_offset}; sf update ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flasher_boot=if test -e mmc 0:${mmc_bootpart} ${flasher_norimage}; then if test "${boot_slot_1}" = "spi-nor"; then echo "Flashing SPI-NOR from MMC0..."; run flash_nor; run nor_boot; fi; fi; if test -e mmc 0:${mmc_bootpart} ${flasher_nandimage}; then if test "${boot_slot_1}" = "spi-nand"; then echo "Flashing SPI-NAND from MMC0..."; run flash_nand; run nand_boot; fi; fi;
flasher_nandimage=sysimage-nand.img
flasher_norimage=sysimage-nor.img
flasher_ptr_buffer=0x80000004
flasher_ptr_counter=0x80000000
flasher_size_buffer=0x800000
genbootargs=setenv bootargs ${bootargs_common} root=${rootdev} ${overlayfs_config}
kernel_addr_r=0x80000000
mmc_boot=mmc dev ${devnum}; echo "Booting from MMC${devnum}..."; rootdev=/dev/mmcblk${devnum}p${mmc_rootpart}; run genbootargs; load mmc ${devnum}:${mmc_bootpart} $kernel_addr_r ${mmc_kernel}; load mmc ${devnum}:${mmc_bootpart} ${fdt_addr_r} ${mmc_fdt}; bootz ${kernel_addr_r} - ${fdt_addr_r};
mmc_bootpart=2
mmc_dfu_info=setenv dfu_alt_info "all raw 0x0 0x37000;u-boot raw 0x10 0x7f0;boot part ${dfu_mmc_dev} ${mmc_bootpart};rom part ${dfu_mmc_dev} ${mmc_rootpart};devicetree.dtb fat ${dfu_mmc_dev} ${mmc_bootpart};zImage fat ${dfu_mmc_dev} ${mmc_bootpart}"
mmc_fdt=devicetree.dtb
mmc_kernel=zImage
mmc_rootpart=3
mmc_ubootpart=1
nand_boot=echo "Booting from SPI-NAND..."; mtd read spi-nand0 ${fdt_addr_r} ${nand_fdt_offset} ${nand_fdt_length}; mtd read spi-nand0 ${kernel_addr_r} ${nand_kernel_offset} ${nand_kernel_length}; rootdev=/dev/mtdblock${nand_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${nand_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nand_dfu_info=all raw 0x0 0x8000000;u-boot raw 0x0 0x80000;dtb raw 0x80000 0x20000;kernel raw 0x100000 0x700000;rom raw 0x800000 0x4000000;extra raw 0x4800000 0x1000000
nand_fdt_length=0x4000
nand_fdt_offset=0x80000
nand_kernel_length=0x700000
nand_kernel_offset=0x100000
nand_overlaypart=5
nand_rootpart=3
nor_boot=echo "Booting from SPI-NOR..."; sf probe; sf read ${fdt_addr_r} ${sf_fdt_offset} ${sf_fdt_length}; sf read ${kernel_addr_r} ${sf_kernel_offset} ${sf_kernel_length}; rootdev=/dev/mtdblock${sf_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${sf_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nor_dfu_info=all raw 0x0 0x1000000;u-boot raw 0x0 0x70000;dtb raw 0x70000 0x10000;kernel raw 0x80000 0x580000;rom raw 0x600000 0x700000
nor_nand_boot=if test "${boot_slot_1}" = "spi-nor"; then run nor_boot; fi; if test "${boot_slot_1}" = "spi-nand"; then run nand_boot; fi;
ramdisk_addr_r=0x80708000
scan_boot_slot=run scan_boot_slot_0; run scan_boot_slot_1; echo "========================="; echo "Boot Device: ${boot_device}"; echo "Boot Slot 0: ${boot_slot_0}"; echo "Boot Slot 1: ${boot_slot_1}"; echo "========================="; 
scan_boot_slot_0=if mmc dev 0; then setenv boot_slot_0 mmc0; fi;
scan_boot_slot_1=if mmc dev 1; then setenv boot_slot_1 mmc1; else if sf probe; then setenv boot_slot_1 spi-nor; else if mtd list; then setenv boot_slot_1 spi-nand; fi; fi; fi;
sf_fdt_length=0x10000
sf_fdt_offset=0x70000
sf_kernel_length=0x580000
sf_kernel_offset=0x80000
sf_overlaypart=4
sf_rootpart=3
stderr=serial,vga
stdin=serial
stdout=serial,vga

Environment size: 6422/131068 bytes
=> 
boot_device=spi
boot_slot_0=empty
boot_slot_1=empty
boot_targets=fel dfu flasher mmc0 mmc1 spi ums
bootargs_common=console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2
bootcmd=run scan_boot_slot; for target in ${boot_targets}; do run bootcmd_${target}; done
bootcmd_dfu=if test "${boot_device}" != "mmc0" || test "${boot_slot_1}" = "empty"; then run dfu_boot; fi;
bootcmd_fel=if test "${boot_device}" = "fel"; then run fel_boot; fi;
bootcmd_flasher=if test "${boot_device}" = "mmc0"; then run flasher_boot; fi;
bootcmd_mmc0=if test "${boot_device}" = "mmc0"; then devnum=0; run mmc_boot; fi;
bootcmd_mmc1=if test "${boot_device}" = "mmc1"; then devnum=1; run mmc_boot; fi;
bootcmd_spi=if test "${boot_device}" = "spi"; then run nor_nand_boot; fi;
bootcmd_ums=if test "${boot_slot_0}" = "mmc0"; then echo "Emulating SD Reader on MMC0..."; ums 0 mmc 0:0; fi;
bootm_size=0x1700000
dfu_boot=if test "${boot_slot_1}" = "spi-nand"; then echo "DFU waiting on SPI-NAND..."; run dfu_nand; fi; if test "${boot_slot_1}" = "spi-nor"; then echo "DFU waiting on SPI-NOR..."; run dfu_nor; fi; if test "${boot_slot_1}" = "mmc1"; then echo "DFU waiting on MMC1..."; setenv dfu_mmc_dev 1; run dfu_mmc; fi; if test "${boot_slot_1}" = "empty" && test "${boot_slot_0}" = "mmc0"; then echo "DFU waiting on MMC0..."; setenv dfu_mmc_dev 0; run dfu_mmc; fi;
dfu_mmc=mmc dev ${dfu_mmc_dev}; run mmc_dfu_info; dfu 0 mmc ${dfu_mmc_dev} ${dfu_wait_timeout};
dfu_nand=setenv dfu_alt_info "${nand_dfu_info}"; dfu 0 mtd spi-nand0 ${dfu_wait_timeout};
dfu_nor=setenv dfu_alt_info "${nor_dfu_info}"; dfu 0 sf 0:0 ${dfu_wait_timeout};
dfu_wait_timeout=3
fdt_addr_r=0x80700000
fdtcontroladdr=82e5cad0
fel_boot=echo "Booting from FEL..."; rootdev=/dev/ram0; run genbootargs; bootz ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r};
flash_nand=size mmc 0:${mmc_bootpart} ${flasher_nandimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; mtd erase spi-nand0; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_nandimage} ${flasher_size_buffer} ${flasher_offset}; mtd write spi-nand0 ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flash_nor=size mmc 0:${mmc_bootpart} ${flasher_norimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_norimage} ${flasher_size_buffer} ${flasher_offset}; sf update ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flasher_boot=if test -e mmc 0:${mmc_bootpart} ${flasher_norimage}; then if test "${boot_slot_1}" = "spi-nor"; then echo "Flashing SPI-NOR from MMC0..."; run flash_nor; run nor_boot; fi; fi; if test -e mmc 0:${mmc_bootpart} ${flasher_nandimage}; then if test "${boot_slot_1}" = "spi-nand"; then echo "Flashing SPI-NAND from MMC0..."; run flash_nand; run nand_boot; fi; fi;
flasher_nandimage=sysimage-nand.img
flasher_norimage=sysimage-nor.img
flasher_ptr_buffer=0x80000004
flasher_ptr_counter=0x80000000
flasher_size_buffer=0x800000
genbootargs=setenv bootargs ${bootargs_common} root=${rootdev} ${overlayfs_config}
kernel_addr_r=0x80000000
mmc_boot=mmc dev ${devnum}; echo "Booting from MMC${devnum}..."; rootdev=/dev/mmcblk${devnum}p${mmc_rootpart}; run genbootargs; load mmc ${devnum}:${mmc_bootpart} $kernel_addr_r ${mmc_kernel}; load mmc ${devnum}:${mmc_bootpart} ${fdt_addr_r} ${mmc_fdt}; bootz ${kernel_addr_r} - ${fdt_addr_r};
mmc_bootpart=2
mmc_dfu_info=setenv dfu_alt_info "all raw 0x0 0x37000;u-boot raw 0x10 0x7f0;boot part ${dfu_mmc_dev} ${mmc_bootpart};rom part ${dfu_mmc_dev} ${mmc_rootpart};devicetree.dtb fat ${dfu_mmc_dev} ${mmc_bootpart};zImage fat ${dfu_mmc_dev} ${mmc_bootpart}"
mmc_fdt=devicetree.dtb
mmc_kernel=zImage
mmc_rootpart=3
mmc_ubootpart=1
nand_boot=echo "Booting from SPI-NAND..."; mtd read spi-nand0 ${fdt_addr_r} ${nand_fdt_offset} ${nand_fdt_length}; mtd read spi-nand0 ${kernel_addr_r} ${nand_kernel_offset} ${nand_kernel_length}; rootdev=/dev/mtdblock${nand_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${nand_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nand_dfu_info=all raw 0x0 0x8000000;u-boot raw 0x0 0x80000;dtb raw 0x80000 0x20000;kernel raw 0x100000 0x700000;rom raw 0x800000 0x4000000;extra raw 0x4800000 0x1000000
nand_fdt_length=0x4000
nand_fdt_offset=0x80000
nand_kernel_length=0x700000
nand_kernel_offset=0x100000
nand_overlaypart=5
nand_rootpart=3
nor_boot=echo "Booting from SPI-NOR..."; sf probe; sf read ${fdt_addr_r} ${sf_fdt_offset} ${sf_fdt_length}; sf read ${kernel_addr_r} ${sf_kernel_offset} ${sf_kernel_length}; rootdev=/dev/mtdblock${sf_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${sf_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nor_dfu_info=all raw 0x0 0x1000000;u-boot raw 0x0 0x70000;dtb raw 0x70000 0x10000;kernel raw 0x80000 0x580000;rom raw 0x600000 0x700000
nor_nand_boot=if test "${boot_slot_1}" = "spi-nor"; then run nor_boot; fi; if test "${boot_slot_1}" = "spi-nand"; then run nand_boot; fi;
ramdisk_addr_r=0x80708000
scan_boot_slot=run scan_boot_slot_0; run scan_boot_slot_1; echo "========================="; echo "Boot Device: ${boot_device}"; echo "Boot Slot 0: ${boot_slot_0}"; echo "Boot Slot 1: ${boot_slot_1}"; echo "========================="; 
scan_boot_slot_0=if mmc dev 0; then setenv boot_slot_0 mmc0; fi;
scan_boot_slot_1=if mmc dev 1; then setenv boot_slot_1 mmc1; else if sf probe; then setenv boot_slot_1 spi-nor; else if mtd list; then setenv boot_slot_1 spi-nand; fi; fi; fi;
sf_fdt_length=0x10000
sf_fdt_offset=0x70000
sf_kernel_length=0x580000
sf_kernel_offset=0x80000
sf_overlaypart=4
sf_rootpart=3
stderr=serial,vga
stdin=serial
stdout=serial,vga

Environment size: 6422/131068 bytes
=> 
boot_device=spi
boot_slot_0=empty
boot_slot_1=empty
boot_targets=fel dfu flasher mmc0 mmc1 spi ums
bootargs_common=console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2
bootcmd=run scan_boot_slot; for target in ${boot_targets}; do run bootcmd_${target}; done
bootcmd_dfu=if test "${boot_device}" != "mmc0" || test "${boot_slot_1}" = "empty"; then run dfu_boot; fi;
bootcmd_fel=if test "${boot_device}" = "fel"; then run fel_boot; fi;
bootcmd_flasher=if test "${boot_device}" = "mmc0"; then run flasher_boot; fi;
bootcmd_mmc0=if test "${boot_device}" = "mmc0"; then devnum=0; run mmc_boot; fi;
bootcmd_mmc1=if test "${boot_device}" = "mmc1"; then devnum=1; run mmc_boot; fi;
bootcmd_spi=if test "${boot_device}" = "spi"; then run nor_nand_boot; fi;
bootcmd_ums=if test "${boot_slot_0}" = "mmc0"; then echo "Emulating SD Reader on MMC0..."; ums 0 mmc 0:0; fi;
bootm_size=0x1700000
dfu_boot=if test "${boot_slot_1}" = "spi-nand"; then echo "DFU waiting on SPI-NAND..."; run dfu_nand; fi; if test "${boot_slot_1}" = "spi-nor"; then echo "DFU waiting on SPI-NOR..."; run dfu_nor; fi; if test "${boot_slot_1}" = "mmc1"; then echo "DFU waiting on MMC1..."; setenv dfu_mmc_dev 1; run dfu_mmc; fi; if test "${boot_slot_1}" = "empty" && test "${boot_slot_0}" = "mmc0"; then echo "DFU waiting on MMC0..."; setenv dfu_mmc_dev 0; run dfu_mmc; fi;
dfu_mmc=mmc dev ${dfu_mmc_dev}; run mmc_dfu_info; dfu 0 mmc ${dfu_mmc_dev} ${dfu_wait_timeout};
dfu_nand=setenv dfu_alt_info "${nand_dfu_info}"; dfu 0 mtd spi-nand0 ${dfu_wait_timeout};
dfu_nor=setenv dfu_alt_info "${nor_dfu_info}"; dfu 0 sf 0:0 ${dfu_wait_timeout};
dfu_wait_timeout=3
fdt_addr_r=0x80700000
fdtcontroladdr=82e5cad0
fel_boot=echo "Booting from FEL..."; rootdev=/dev/ram0; run genbootargs; bootz ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r};
flash_nand=size mmc 0:${mmc_bootpart} ${flasher_nandimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; mtd erase spi-nand0; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_nandimage} ${flasher_size_buffer} ${flasher_offset}; mtd write spi-nand0 ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flash_nor=size mmc 0:${mmc_bootpart} ${flasher_norimage}; setexpr size_image ${filesize}; mw ${flasher_ptr_counter} ${size_image}; flasher_offset=0; while itest *${flasher_ptr_counter} > 0; do if itest ${size_image} > ${flasher_size_buffer}; then blocksize=${flasher_size_buffer}; else blocksize=0x${size_image}; fi; setexpr size_image ${size_image} - ${blocksize}; mw ${flasher_ptr_counter} ${size_image}; load mmc 0:${mmc_bootpart} ${flasher_ptr_buffer} ${flasher_norimage} ${flasher_size_buffer} ${flasher_offset}; sf update ${flasher_ptr_buffer} ${flasher_offset} ${flasher_size_buffer}; setexpr flasher_offset ${flasher_offset} + ${blocksize}; done;
flasher_boot=if test -e mmc 0:${mmc_bootpart} ${flasher_norimage}; then if test "${boot_slot_1}" = "spi-nor"; then echo "Flashing SPI-NOR from MMC0..."; run flash_nor; run nor_boot; fi; fi; if test -e mmc 0:${mmc_bootpart} ${flasher_nandimage}; then if test "${boot_slot_1}" = "spi-nand"; then echo "Flashing SPI-NAND from MMC0..."; run flash_nand; run nand_boot; fi; fi;
flasher_nandimage=sysimage-nand.img
flasher_norimage=sysimage-nor.img
flasher_ptr_buffer=0x80000004
flasher_ptr_counter=0x80000000
flasher_size_buffer=0x800000
genbootargs=setenv bootargs ${bootargs_common} root=${rootdev} ${overlayfs_config}
kernel_addr_r=0x80000000
mmc_boot=mmc dev ${devnum}; echo "Booting from MMC${devnum}..."; rootdev=/dev/mmcblk${devnum}p${mmc_rootpart}; run genbootargs; load mmc ${devnum}:${mmc_bootpart} $kernel_addr_r ${mmc_kernel}; load mmc ${devnum}:${mmc_bootpart} ${fdt_addr_r} ${mmc_fdt}; bootz ${kernel_addr_r} - ${fdt_addr_r};
mmc_bootpart=2
mmc_dfu_info=setenv dfu_alt_info "all raw 0x0 0x37000;u-boot raw 0x10 0x7f0;boot part ${dfu_mmc_dev} ${mmc_bootpart};rom part ${dfu_mmc_dev} ${mmc_rootpart};devicetree.dtb fat ${dfu_mmc_dev} ${mmc_bootpart};zImage fat ${dfu_mmc_dev} ${mmc_bootpart}"
mmc_fdt=devicetree.dtb
mmc_kernel=zImage
mmc_rootpart=3
mmc_ubootpart=1
nand_boot=echo "Booting from SPI-NAND..."; mtd read spi-nand0 ${fdt_addr_r} ${nand_fdt_offset} ${nand_fdt_length}; mtd read spi-nand0 ${kernel_addr_r} ${nand_kernel_offset} ${nand_kernel_length}; rootdev=/dev/mtdblock${nand_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${nand_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nand_dfu_info=all raw 0x0 0x8000000;u-boot raw 0x0 0x80000;dtb raw 0x80000 0x20000;kernel raw 0x100000 0x700000;rom raw 0x800000 0x4000000;extra raw 0x4800000 0x1000000
nand_fdt_length=0x4000
nand_fdt_offset=0x80000
nand_kernel_length=0x700000
nand_kernel_offset=0x100000
nand_overlaypart=5
nand_rootpart=3
nor_boot=echo "Booting from SPI-NOR..."; sf probe; sf read ${fdt_addr_r} ${sf_fdt_offset} ${sf_fdt_length}; sf read ${kernel_addr_r} ${sf_kernel_offset} ${sf_kernel_length}; rootdev=/dev/mtdblock${sf_rootpart}; overlayfs_config="overlayfsdev=/dev/mtdblock${sf_overlaypart}"; run genbootargs; bootz ${kernel_addr_r} - ${fdt_addr_r};
nor_dfu_info=all raw 0x0 0x1000000;u-boot raw 0x0 0x70000;dtb raw 0x70000 0x10000;kernel raw 0x80000 0x580000;rom raw 0x600000 0x700000
nor_nand_boot=if test "${boot_slot_1}" = "spi-nor"; then run nor_boot; fi; if test "${boot_slot_1}" = "spi-nand"; then run nand_boot; fi;
ramdisk_addr_r=0x80708000
scan_boot_slot=run scan_boot_slot_0; run scan_boot_slot_1; echo "========================="; echo "Boot Device: ${boot_device}"; echo "Boot Slot 0: ${boot_slot_0}"; echo "Boot Slot 1: ${boot_slot_1}"; echo "========================="; 
scan_boot_slot_0=if mmc dev 0; then setenv boot_slot_0 mmc0; fi;
scan_boot_slot_1=if mmc dev 1; then setenv boot_slot_1 mmc1; else if sf probe; then setenv boot_slot_1 spi-nor; else if mtd list; then setenv boot_slot_1 spi-nand; fi; fi; fi;
sf_fdt_length=0x10000
sf_fdt_offset=0x70000
sf_kernel_length=0x580000
sf_kernel_offset=0x80000
sf_overlaypart=4
sf_rootpart=3
stderr=serial,vga
stdin=serial
stdout=serial,vga

Environment size: 6422/131068 bytes
=> <INTERRUPT>
=> printenv bootargs_common
bootargs_common=console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2
=> BOOT
Unknown command 'BOOT' - try 'help'
=> boot
Card did not respond to voltage select!
Card did not respond to voltage select!
unrecognized JEDEC id bytes: ff, c8, f1
Failed to initialize SPI flash at 0:0 (error -2)
List of MTD devices:
* spi-nand0
  - device: spi-nand@1
  - parent: spi@1c05000
  - driver: spi_nand
  - type: NAND flash
  - block size: 0x20000 bytes
  - min I/O: 0x800 bytes
  - OOB size: 64 bytes
  - OOB available: 31 bytes
  - 0x000000000000-0x000008000000 : "spi-nand0"
=========================
Boot Device: spi
Boot Slot 0: empty
Boot Slot 1: spi-nand
=========================
DFU waiting on SPI-NAND...
musb-hdrc: peripheral reset irq lost!
Booting from SPI-NAND...
Reading 16384 byte(s) (8 page(s)) at offset 0x00080000
Reading 7340032 byte(s) (3584 page(s)) at offset 0x00100000
## Flattened Device Tree blob at 80700000
   Booting using the fdt blob at 0x80700000
   Loading Device Tree to 816f9000, end 816ffd7a ... OK
Cannot setup simplefb: node not found

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 5.4.75 (aodzip@ThinkPad-X1) (gcc version 8.4.0 (Buildroot -g99ab117-dirty)) #1 Fri Nov 13 16:47:42 CST 2020
[    0.000000] CPU: ARM926EJ-S [41069265] revision 5 (ARMv5TEJ), cr=0005317f
[    0.000000] CPU: VIVT data cache, VIVT instruction cache
[    0.000000] OF: fdt: Machine model: HatLab BADGE200
[    0.000000] Memory policy: Data cache writeback
[    0.000000] cma: Reserved 16 MiB at 0x83000000
[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 16256
[    0.000000] Kernel command line: console=ttyS0,115200 earlyprintk rootwait init=/preinit consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2 root=/dev/mtdblock3 overlayfsdev=/dev/mtdblock5
[    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes, linear)
[    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes, linear)
[    0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.000000] Memory: 37700K/65536K available (7168K kernel code, 260K rwdata, 1744K rodata, 1024K init, 226K bss, 11452K reserved, 16384K cma-reserved)
[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16
[    0.000000] random: get_random_bytes called from start_kernel+0x254/0x444 with crng_init=0
[    0.000051] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000142] clocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000938] Console: colour dummy device 80x30
[    0.001042] Calibrating delay loop... 203.16 BogoMIPS (lpj=1015808)
[    0.070268] pid_max: default: 32768 minimum: 301
[    0.070808] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.070858] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.072804] CPU: Testing write buffer coherency: ok
[    0.074951] Setting up static identity map for 0x80100000 - 0x80100058
[    0.076260] devtmpfs: initialized
[    0.088149] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.088214] futex hash table entries: 256 (order: -1, 3072 bytes, linear)
[    0.092526] pinctrl core: initialized pinctrl subsystem
[    0.095262] NET: Registered protocol family 16
[    0.098868] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.101390] cpuidle: using governor menu
[    0.148410] SCSI subsystem initialized
[    0.148863] usbcore: registered new interface driver usbfs
[    0.149037] usbcore: registered new interface driver hub
[    0.149234] usbcore: registered new device driver usb
[    0.149754] mc: Linux media interface: v0.10
[    0.149865] videodev: Linux video capture interface: v2.00
[    0.149965] pps_core: LinuxPPS API ver. 1 registered
[    0.149983] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.150068] PTP clock support registered
[    0.151305] ion_parse_dt_heap_common: id 4 type 4 name cma align 1000
[    0.152545] Advanced Linux Sound Architecture Driver Initialized.
[    0.153813] Bluetooth: Core ver 2.22
[    0.154006] NET: Registered protocol family 31
[    0.154032] Bluetooth: HCI device and connection manager initialized
[    0.154072] Bluetooth: HCI socket layer initialized
[    0.154097] Bluetooth: L2CAP socket layer initialized
[    0.154162] Bluetooth: SCO socket layer initialized
[    0.155450] clocksource: Switched to clocksource timer
[    0.187068] thermal_sys: Registered thermal governor 'step_wise'
[    0.187838] NET: Registered protocol family 2
[    0.189392] tcp_listen_portaddr_hash hash table entries: 512 (order: 0, 4096 bytes, linear)
[    0.189473] TCP established hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.189528] TCP bind hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.189575] TCP: Hash tables configured (established 1024 bind 1024)
[    0.189837] UDP hash table entries: 256 (order: 0, 4096 bytes, linear)
[    0.189897] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes, linear)
[    0.190407] NET: Registered protocol family 1
[    0.193264] NetWinder Floating Point Emulator V0.97 (double precision)
[    0.195154] Initialise system trusted keyrings
[    0.195879] workingset: timestamp_bits=30 max_order=14 bucket_order=0
[    0.217596] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.218220] jffs2: version 2.2. (NAND) (SUMMARY)  Â© 2001-2006 Red Hat, Inc.
[    0.334260] Key type asymmetric registered
[    0.334301] Asymmetric key parser 'x509' registered
[    0.334486] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 247)
[    0.334515] io scheduler mq-deadline registered
[    0.334532] io scheduler kyber registered
[    0.337500] sun4i-usb-phy 1c13400.phy: Couldn't request ID GPIO
[    0.349297] suniv-f1c100s-pinctrl 1c20800.pinctrl: initialized sunXi PIO driver
[    0.374294] Serial: 8250/16550 driver, 8 ports, IRQ sharing disabled
[    0.383400] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pe not found, using dummy regulator
[    0.384835] printk: console [ttyS0] disabled
[    0.405170] 1c25000.serial: ttyS0 at MMIO 0x1c25000 (irq = 27, base_baud = 6250000) is a 16550A
[    0.875086] printk: console [ttyS0] enabled
[    0.881016] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pa not found, using dummy regulator
[    0.912864] 1c25400.serial: ttyS1 at MMIO 0x1c25400 (irq = 28, base_baud = 6250000) is a 16550A
[    0.922214] serial serial0: tty port ttyS1 registered
[    0.932448] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pd not found, using dummy regulator
[    0.954137] panel-simple panel: panel supply power not found, using dummy regulator
[    0.963794] SCSI Media Changer driver v0.25 
[    0.969737] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pc not found, using dummy regulator
[    0.982605] spi-nand spi0.0: GigaDevice SPI NAND was found.
[    0.988310] spi-nand spi0.0: 128 MiB, block size: 128 KiB, page size: 2048, OOB size: 64
[    0.997898] 6 fixed-partitions partitions found on MTD device spi0.0
[    1.004257] Creating 6 MTD partitions on "spi0.0":
[    1.009176] 0x000000000000-0x000000080000 : "u-boot"
[    1.020050] 0x000000080000-0x0000000a0000 : "dtb"
[    1.029166] 0x000000100000-0x000000800000 : "kernel"
[    1.037179] random: fast init done
[    1.067484] 0x000000800000-0x000004800000 : "rom"
[    1.309274] 0x000004800000-0x000005800000 : "extra"
[    1.376578] 0x000005800000-0x000007800000 : "overlay"
[    1.502778] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.509433] ehci-platform: EHCI generic platform driver
[    1.515088] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.521400] ohci-platform: OHCI generic platform driver
[    1.527216] usbcore: registered new interface driver usb-storage
[    1.535123] i2c /dev entries driver
[    1.539409] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pd not found, using dummy regulator
[    1.559160] aw9523b_gpio 0-005b: with id 0x23 registered.
[    1.565565] axp20x-i2c 0-0034: AXP20x variant AXP199 found
[    1.588587] input: axp20x-pek as /devices/platform/soc/1c27000.i2c/i2c-0/0-0034/axp199-pek/input/input0
[    1.602651] axp20x-i2c 0-0034: AXP20X driver loaded
[    1.609455] suniv-f1c100s-pinctrl 1c20800.pinctrl: pin PE0 already requested by 1c25000.serial; cannot claim for 1cb0000.csi
[    1.620784] suniv-f1c100s-pinctrl 1c20800.pinctrl: pin-128 (1cb0000.csi) status -22
[    1.628500] suniv-f1c100s-pinctrl 1c20800.pinctrl: could not request pin 128 (PE0) from group PE0  on device 1c20800.pinctrl
[    1.639733] sun4i-csi 1cb0000.csi: Error applying setting, reverse things back
[    1.647030] sun4i-csi: probe of 1cb0000.csi failed with error -22
[    1.653751] axp20x-usb-power-supply axp20x-usb-power-supply: DMA mask not set
[    1.662560] axp20x-battery-power-supply axp20x-battery-power-supply: DMA mask not set
[    1.671116] axp20x-ac-power-supply axp20x-ac-power-supply: DMA mask not set
[    1.679669] sunxi-wdt 1c20ca0.watchdog: Watchdog enabled (timeout=16 sec, nowayout=0)
[    1.689826] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pf not found, using dummy regulator
[    1.727841] sunxi-mmc 1c0f000.mmc: initialized, max. request size: 16384 KB
[    1.737465] usbcore: registered new interface driver usbhid
[    1.743038] usbhid: USB HID core driver
[    1.747322] sunxi-cedar 1c0e000.video-codec: sunxi cedar version 0.01alpha
[    1.754527] sunxi-cedar 1c0e000.video-codec: cedar-ve the get irq is 20
[    1.763367] axp20x-adc axp20x-adc: DMA mask not set
[    1.775421] debugfs: Directory '1c23c00.codec' with parent 'F1C100s Audio Codec' already present!
[    1.789421] sun4i-codec 1c23c00.codec: Codec <-> 1c23c00.codec mapping ok
[    1.805353] NET: Registered protocol family 17
[    1.810368] Bluetooth: RFCOMM TTY layer initialized
[    1.815329] Bluetooth: RFCOMM socket layer initialized
[    1.820613] Bluetooth: RFCOMM ver 1.11
[    1.824426] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[    1.829810] Bluetooth: BNEP filters: protocol multicast
[    1.835054] Bluetooth: BNEP socket layer initialized
[    1.840072] Bluetooth: HIDP (Human Interface Emulation) ver 1.2
[    1.846041] Bluetooth: HIDP socket layer initialized
[    1.851068] Key type dns_resolver registered
[    1.856851] Loading compiled-in X.509 certificates
[    1.882443] sun4i-drm soc:display-engine: bound 1e00000.display-frontend (ops 0xc0839e98)
[    1.891498] sun4i-drm soc:display-engine: bound 1e60000.display-backend (ops 0xc08396dc)
[    1.901099] sun4i-drm soc:display-engine: bound 1c0c000.lcd-controller (ops 0xc083827c)
[    1.909688] sun4i-drm soc:display-engine: bound 1c0a000.tv-encoder (ops 0xc0838f9c)
[    1.917466] [drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
[    1.924070] [drm] No driver support for vblank timestamp query.
[    1.931688] [drm] Initialized sun4i-drm 1.0.0 20150629 for soc:display-engine on minor 0
[    1.940771] [drm] kms: can't enable cloning when we probably wanted to.
[    2.012103] Console: switching to colour frame buffer device 100x30
[    2.051141] sun4i-drm soc:display-engine: fb0: sun4i-drmdrmfb frame buffer device
[    2.060526] usb_phy_generic usb_phy_generic.0.auto: usb_phy_generic.0.auto supply vcc not found, using dummy regulator
[    2.072669] musb-hdrc musb-hdrc.1.auto: MUSB HDRC host driver
[    2.078649] musb-hdrc musb-hdrc.1.auto: new USB bus registered, assigned bus number 1
[    2.089657] hub 1-0:1.0: USB hub found
[    2.093584] hub 1-0:1.0: 1 port detected
[    2.128453] hctosys: unable to open rtc device (rtc0)
[    2.134103] cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.154247] cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.161111] ALSA device list:
[    2.164103]   #0: F1C100s Audio Codec
[    2.169429] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.178212] cfg80211: failed to load regulatory.db
[    2.187572] random: crng init done
[    2.194142] power_supply axp20x-battery: driver failed to report `status' property: -5


[   23.228988] jffs2: notice: (1) jffs2_build_xattr_subsystem: complete building xattr subsystem, 0 of xdatum (0 unchecked, 0 orphan) and 0 of xref (0 dead, 0 orphan) found.
[   23.261914] VFS: Mounted root (jffs2 filesystem) readonly on device 31:3.
[   23.277145] devtmpfs: mounted
[   23.285980] Freeing unused kernel memory: 1024K
[   23.290625] Run /preinit as init process
Unlocking /dev/mtd5 ...
Erasing /dev/mtd5 ...

Skipping bad block at 0x800000   [   27.051452] jffs2: notice: (61) jffs2_build_xattr_subsystem: complete building xattr subsystem, 0 of xdatum (0 unchecked, 0 orphan) and 0 of xref (0 dead, 0 orphan) found.
[   27.173087] overlayfs: upper fs does not support tmpfile.
Starting syslogd: OK
Starting klogd: OK
Running sysctl: OK
Saving random seed: OK
Starting system message bus: done
Starting RNDIS: [   30.610077] using random self ethernet address
[   30.614555] using random host ethernet address
[   30.762325] usb0: HOST MAC 2e:4b:06:71:b3:20
[   30.766912] usb0: MAC b2:f4:65:07:ae:00
OK
Starting network: [   31.140468] configfs-gadget gadget: high-speed config #1: c
OK
Starting dropbear sshd: OK
Starting dnsmasq: OK
Starting RNDIS fallback: [   32.485817] vcc3v0: disabling
[   32.488826] vcc3v3: disabling
[   32.491795] vcc5v0: disabling
[   32.494760] usb0_vbus: disabling
Stopping RNDIS: OK
[   49.672573] using random self ethernet address
[   49.677187] using random host ethernet address
[   49.683023] usb0: HOST MAC 9e:5d:b1:43:e5:a7
[   49.687613] usb0: MAC e6:f1:17:6b:65:e8
[   49.691554] using random self ethernet address
[   49.696106] using random host ethernet address
[   49.700729] g_ether gadget: Ethernet Gadget, version: Memorial Day 2008
[   49.707439] g_ether gadget: g_ether ready
OK
Starting Bluetooth Driver: [   50.086430] g_ether gadget: high-speed config #1: CDC Ethernet (ECM)
[   51.091291] Bluetooth: HCI UART driver ver 2.3
[   51.095950] Bluetooth: HCI UART protocol H4 registered
[   51.101573] Bluetooth: HCI UART protocol Broadcom registered
[   51.112628] hci_uart_bcm serial0-0: serial0-0 supply vbat not found, using dummy regulator
[   51.121289] hci_uart_bcm serial0-0: serial0-0 supply vddio not found, using dummy regulator
OK
Starting Application: [   51.470510] overlayfs: upper fs does not support tmpfile.
[   51.541488] Bluetooth: hci0: BCM: chip id 63
[   51.551190] Bluetooth: hci0: BCM: features 0x07
[   51.579509] Bluetooth: hci0: BCM20702A
[   51.583314] Bluetooth: hci0: BCM20702A1 (001.002.014) build 0000
[   51.589660] bluetooth hci0: Direct firmware load for brcm/BCM20702A1.hcd failed with error -2
[   51.598398] Bluetooth: hci0: BCM: Patch brcm/BCM20702A1.hcd not found
OK

Welcome to Hatlab BADGE200
badge200 login: 
Welcome to Hatlab BADGE200
badge200 login: 
Welcome to Hatlab BADGE200
badge200 login: 
Welcome to Hatlab BADGE200
badge200 login: 
U-Boot SPL 2020.07 (Nov 13 2020 - 15:01:11 +0800)
DRAM: 64 MiB
Trying to boot from MMC1
Card did not respond to voltage select!
spl: mmc init failed with error: -95
Trying to boot from MMC2
Card did not respond to voltage select!
spl: mmc init failed with error: -95
Trying to boot from sunxi SPI
SPI-NAND: GigaDevice GD5F1GQ4UAxxG
SPI-NAND: U-Boot address: 53248


U-Boot 2020.07 (Nov 13 2020 - 15:01:11 +0800) Allwinner Technology

CPU:   Allwinner F Series (SUNIV)
Model: Allwinner F1C100s Generic Device
DRAM:  64 MiB
MMC:   mmc@1c0f000: 0, mmc@1c10000: 1
Setting up a 800x480 lcd console (overscan 0x0)
In:    serial
Out:   vga
Err:   vga
Allwinner mUSB OTG (Peripheral)
Hit any key to stop autoboot:  0  0
=> 
=> 
=> 
=> setenv bootargs_common "console=ttyS0,115200 earlyprintk rootwait init=/bin/sh consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2"
=> BOOT    bn oot
Card did not respond to voltage select!
Card did not respond to voltage select!
unrecognized JEDEC id bytes: ff, c8, f1
Failed to initialize SPI flash at 0:0 (error -2)
List of MTD devices:
* spi-nand0
  - device: spi-nand@1
  - parent: spi@1c05000
  - driver: spi_nand
  - type: NAND flash
  - block size: 0x20000 bytes
  - min I/O: 0x800 bytes
  - OOB size: 64 bytes
  - OOB available: 31 bytes
  - 0x000000000000-0x000008000000 : "spi-nand0"
=========================
Boot Device: spi
Boot Slot 0: empty
Boot Slot 1: spi-nand
=========================
DFU waiting on SPI-NAND...
musb-hdrc: peripheral reset irq lost!
Booting from SPI-NAND...
Reading 16384 byte(s) (8 page(s)) at offset 0x00080000
Reading 7340032 byte(s) (3584 page(s)) at offset 0x00100000
## Flattened Device Tree blob at 80700000
   Booting using the fdt blob at 0x80700000
   Loading Device Tree to 816f9000, end 816ffd7a ... OK
Cannot setup simplefb: node not found

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 5.4.75 (aodzip@ThinkPad-X1) (gcc version 8.4.0 (Buildroot -g99ab117-dirty)) #1 Fri Nov 13 16:47:42 CST 2020
[    0.000000] CPU: ARM926EJ-S [41069265] revision 5 (ARMv5TEJ), cr=0005317f
[    0.000000] CPU: VIVT data cache, VIVT instruction cache
[    0.000000] OF: fdt: Machine model: HatLab BADGE200
[    0.000000] Memory policy: Data cache writeback
[    0.000000] cma: Reserved 16 MiB at 0x83000000
[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 16256
[    0.000000] Kernel command line: console=ttyS0,115200 earlyprintk rootwait init=/bin/sh consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2 root=/dev/mtdblock3 overlayfsdev=/dev/mtdblock5
[    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes, linear)
[    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes, linear)
[    0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.000000] Memory: 37700K/65536K available (7168K kernel code, 260K rwdata, 1744K rodata, 1024K init, 226K bss, 11452K reserved, 16384K cma-reserved)
[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] NR_IRQS: 16, nr_irqs: 16, preallocated irqs: 16
[    0.000000] random: get_random_bytes called from start_kernel+0x254/0x444 with crng_init=0
[    0.000051] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000142] clocksource: timer: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000929] Console: colour dummy device 80x30
[    0.001032] Calibrating delay loop... 203.16 BogoMIPS (lpj=1015808)
[    0.070265] pid_max: default: 32768 minimum: 301
[    0.070804] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.070853] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.072784] CPU: Testing write buffer coherency: ok
[    0.074951] Setting up static identity map for 0x80100000 - 0x80100058
[    0.076254] devtmpfs: initialized
[    0.088093] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.088158] futex hash table entries: 256 (order: -1, 3072 bytes, linear)
[    0.092506] pinctrl core: initialized pinctrl subsystem
[    0.095176] NET: Registered protocol family 16
[    0.099063] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.101531] cpuidle: using governor menu
[    0.148498] SCSI subsystem initialized
[    0.148939] usbcore: registered new interface driver usbfs
[    0.149122] usbcore: registered new interface driver hub
[    0.149318] usbcore: registered new device driver usb
[    0.149833] mc: Linux media interface: v0.10
[    0.149943] videodev: Linux video capture interface: v2.00
[    0.150048] pps_core: LinuxPPS API ver. 1 registered
[    0.150066] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.150151] PTP clock support registered
[    0.151373] ion_parse_dt_heap_common: id 4 type 4 name cma align 1000
[    0.152629] Advanced Linux Sound Architecture Driver Initialized.
[    0.154005] Bluetooth: Core ver 2.22
[    0.154219] NET: Registered protocol family 31
[    0.154246] Bluetooth: HCI device and connection manager initialized
[    0.154289] Bluetooth: HCI socket layer initialized
[    0.154315] Bluetooth: L2CAP socket layer initialized
[    0.154384] Bluetooth: SCO socket layer initialized
[    0.155685] clocksource: Switched to clocksource timer
[    0.187117] thermal_sys: Registered thermal governor 'step_wise'
[    0.187894] NET: Registered protocol family 2
[    0.189438] tcp_listen_portaddr_hash hash table entries: 512 (order: 0, 4096 bytes, linear)
[    0.189521] TCP established hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.189579] TCP bind hash table entries: 1024 (order: 0, 4096 bytes, linear)
[    0.189628] TCP: Hash tables configured (established 1024 bind 1024)
[    0.189959] UDP hash table entries: 256 (order: 0, 4096 bytes, linear)
[    0.190028] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes, linear)
[    0.190587] NET: Registered protocol family 1
[    0.193446] NetWinder Floating Point Emulator V0.97 (double precision)
[    0.195330] Initialise system trusted keyrings
[    0.196046] workingset: timestamp_bits=30 max_order=14 bucket_order=0
[    0.217716] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.218363] jffs2: version 2.2. (NAND) (SUMMARY)  Â© 2001-2006 Red Hat, Inc.
[    0.336871] Key type asymmetric registered
[    0.336913] Asymmetric key parser 'x509' registered
[    0.337097] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 247)
[    0.337124] io scheduler mq-deadline registered
[    0.337142] io scheduler kyber registered
[    0.339915] sun4i-usb-phy 1c13400.phy: Couldn't request ID GPIO
[    0.351675] suniv-f1c100s-pinctrl 1c20800.pinctrl: initialized sunXi PIO driver
[    0.376761] Serial: 8250/16550 driver, 8 ports, IRQ sharing disabled
[    0.385814] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pe not found, using dummy regulator
[    0.387273] printk: console [ttyS0] disabled
[    0.407602] 1c25000.serial: ttyS0 at MMIO 0x1c25000 (irq = 27, base_baud = 6250000) is a 16550A
[    0.877436] printk: console [ttyS0] enabled
[    0.883312] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pa not found, using dummy regulator
[    0.915283] 1c25400.serial: ttyS1 at MMIO 0x1c25400 (irq = 28, base_baud = 6250000) is a 16550A
[    0.924635] serial serial0: tty port ttyS1 registered
[    0.934921] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pd not found, using dummy regulator
[    0.956682] panel-simple panel: panel supply power not found, using dummy regulator
[    0.966359] SCSI Media Changer driver v0.25 
[    0.972153] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pc not found, using dummy regulator
[    0.985028] spi-nand spi0.0: GigaDevice SPI NAND was found.
[    0.990734] spi-nand spi0.0: 128 MiB, block size: 128 KiB, page size: 2048, OOB size: 64
[    1.000332] 6 fixed-partitions partitions found on MTD device spi0.0
[    1.006803] Creating 6 MTD partitions on "spi0.0":
[    1.011611] 0x000000000000-0x000000080000 : "u-boot"
[    1.022380] 0x000000080000-0x0000000a0000 : "dtb"
[    1.031511] 0x000000100000-0x000000800000 : "kernel"
[    1.039410] random: fast init done
[    1.069664] 0x000000800000-0x000004800000 : "rom"
[    1.311416] 0x000004800000-0x000005800000 : "extra"
[    1.378769] 0x000005800000-0x000007800000 : "overlay"
[    1.504767] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.511424] ehci-platform: EHCI generic platform driver
[    1.517133] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.523357] ohci-platform: OHCI generic platform driver
[    1.529186] usbcore: registered new interface driver usb-storage
[    1.537212] i2c /dev entries driver
[    1.541344] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pd not found, using dummy regulator
[    1.561197] aw9523b_gpio 0-005b: with id 0x23 registered.
[    1.567586] axp20x-i2c 0-0034: AXP20x variant AXP199 found
[    1.590651] input: axp20x-pek as /devices/platform/soc/1c27000.i2c/i2c-0/0-0034/axp199-pek/input/input0
[    1.604709] axp20x-i2c 0-0034: AXP20X driver loaded
[    1.611502] suniv-f1c100s-pinctrl 1c20800.pinctrl: pin PE0 already requested by 1c25000.serial; cannot claim for 1cb0000.csi
[    1.622832] suniv-f1c100s-pinctrl 1c20800.pinctrl: pin-128 (1cb0000.csi) status -22
[    1.630548] suniv-f1c100s-pinctrl 1c20800.pinctrl: could not request pin 128 (PE0) from group PE0  on device 1c20800.pinctrl
[    1.641779] sun4i-csi 1cb0000.csi: Error applying setting, reverse things back
[    1.649075] sun4i-csi: probe of 1cb0000.csi failed with error -22
[    1.655887] axp20x-usb-power-supply axp20x-usb-power-supply: DMA mask not set
[    1.664605] axp20x-battery-power-supply axp20x-battery-power-supply: DMA mask not set
[    1.673163] axp20x-ac-power-supply axp20x-ac-power-supply: DMA mask not set
[    1.681735] sunxi-wdt 1c20ca0.watchdog: Watchdog enabled (timeout=16 sec, nowayout=0)
[    1.691885] suniv-f1c100s-pinctrl 1c20800.pinctrl: 1c20800.pinctrl supply vcc-pf not found, using dummy regulator
[    1.729883] sunxi-mmc 1c0f000.mmc: initialized, max. request size: 16384 KB
[    1.739441] usbcore: registered new interface driver usbhid
[    1.745015] usbhid: USB HID core driver
[    1.749304] sunxi-cedar 1c0e000.video-codec: sunxi cedar version 0.01alpha
[    1.756614] sunxi-cedar 1c0e000.video-codec: cedar-ve the get irq is 20
[    1.765342] axp20x-adc axp20x-adc: DMA mask not set
[    1.777550] debugfs: Directory '1c23c00.codec' with parent 'F1C100s Audio Codec' already present!
[    1.791437] sun4i-codec 1c23c00.codec: Codec <-> 1c23c00.codec mapping ok
[    1.807526] NET: Registered protocol family 17
[    1.812426] Bluetooth: RFCOMM TTY layer initialized
[    1.817489] Bluetooth: RFCOMM socket layer initialized
[    1.822681] Bluetooth: RFCOMM ver 1.11
[    1.826573] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[    1.831882] Bluetooth: BNEP filters: protocol multicast
[    1.837189] Bluetooth: BNEP socket layer initialized
[    1.842154] Bluetooth: HIDP (Human Interface Emulation) ver 1.2
[    1.848130] Bluetooth: HIDP socket layer initialized
[    1.853158] Key type dns_resolver registered
[    1.858909] Loading compiled-in X.509 certificates
[    1.884462] sun4i-drm soc:display-engine: bound 1e00000.display-frontend (ops 0xc0839e98)
[    1.893526] sun4i-drm soc:display-engine: bound 1e60000.display-backend (ops 0xc08396dc)
[    1.903119] sun4i-drm soc:display-engine: bound 1c0c000.lcd-controller (ops 0xc083827c)
[    1.911712] sun4i-drm soc:display-engine: bound 1c0a000.tv-encoder (ops 0xc0838f9c)
[    1.919490] [drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
[    1.926148] [drm] No driver support for vblank timestamp query.
[    1.933720] [drm] Initialized sun4i-drm 1.0.0 20150629 for soc:display-engine on minor 0
[    1.942794] [drm] kms: can't enable cloning when we probably wanted to.
[    2.014179] Console: switching to colour frame buffer device 100x30
[    2.053147] sun4i-drm soc:display-engine: fb0: sun4i-drmdrmfb frame buffer device
[    2.062503] usb_phy_generic usb_phy_generic.0.auto: usb_phy_generic.0.auto supply vcc not found, using dummy regulator
[    2.074596] musb-hdrc musb-hdrc.1.auto: MUSB HDRC host driver
[    2.080637] musb-hdrc musb-hdrc.1.auto: new USB bus registered, assigned bus number 1
[    2.091645] hub 1-0:1.0: USB hub found
[    2.095566] hub 1-0:1.0: 1 port detected
[    2.130219] hctosys: unable to open rtc device (rtc0)
[    2.136032] cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.156843] cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.163642] ALSA device list:
[    2.166759]   #0: F1C100s Audio Codec
[    2.171051] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.179820] cfg80211: failed to load regulatory.db
[    2.188524] random: crng init done
[    2.194775] power_supply axp20x-battery: driver failed to report `status' property: -5

[   23.318472] jffs2: notice: (1) jffs2_build_xattr_subsystem: complete building xattr subsystem, 0 of xdatum (0 unchecked, 0 orphan) and 0 of xref (0 dead, 0 orphan) found.
[   23.351438] VFS: Mounted root (jffs2 filesystem) readonly on device 31:3.
[   23.366588] devtmpfs: mounted
[   23.376154] Freeing unused kernel memory: 1024K
[   23.380881] Run /bin/sh as init process
/bin/sh: can't access tty; job control turned off
/ # 
/ # [   32.485773] vcc3v0: disabling
[   32.488773] vcc3v3: disabling
[   32.491742] vcc5v0: disabling
[   32.494708] usb0_vbus: disabling

/ # 
/ # ls
[1;34mbin[m      [1;34mlib[m      [1;34mmedia[m    [1;34moverlay[m  [1;34mroot[m     [1;34msys[m      [1;34mvar[m
[1;34mdev[m      [1;36mlib32[m    [1;34mmnt[m      [1;32mpreinit[m  [1;34mrun[m      [1;34mtmp[m
[1;34metc[m      [1;36mlinuxrc[m  [1;34mopt[m      [1;34mproc[m     [1;34msbin[m     [1;34musr[m
/ # cta[J[Jat pr/ # cat pr[Jeinit
#!/bin/sh
mount proc /proc -t proc
set -- $(cat /proc/cmdline)
umount /proc
for x in "$@"; do
    case "$x" in
        overlayfsdev=*)
        OVERLAYFSDEV="${x#overlayfsdev=}"
        mtd erase /dev/mtd5
        mount -n -t jffs2 ${OVERLAYFSDEV} -o rw,noatime /overlay
        mkdir -p /overlay/rom/lower /overlay/rom/upper /overlay/rom/work
        mount -n -t overlay overlayfs:/overlay/rom -o rw,noatime,lowerdir=/,upperdir=/overlay/rom/upper,workdir=/overlay/rom/work /tmp
        mount --rbind /dev /tmp/dev/
        mount --rbind /overlay /tmp/overlay/
        mount --rbind / /tmp/overlay/rom/lower
        exec chroot /tmp /sbin/init
        ;;
    esac
done
exec /sbin/init
/ # cat /proc/cmdline
cat: can't open '/proc/cmdline': No such file or directory
/ # mount proc /proc -t proc
/ # cat /proc/cmdline
console=ttyS0,115200 earlyprintk rootwait init=/bin/sh consoleblank=0 net.ifnames=0 biosdevname=0 rootfstype=jffs2 root=/dev/mtdblock3 overlayfsdev=/dev/mtdblock5
/ # 